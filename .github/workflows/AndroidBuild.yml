name: AndroidBuild
on:
  pull_request :
    branches : [ master]
  push :
      branches : [master]
build:
jobs:
  test-ubuntu-latest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: test install-sdk
      run: npm config delete prefix && source ~/.nvm/nvm.sh && nvm install v16.15.0 && npm install && npm ci && npm run build
      working-directory: install-sdk
    - name: test emulator-run-cmd
      run: npm config delete prefix && source ~/.nvm/nvm.sh && nvm install v16.15.0 && npm install && npm ci && npm run build
      working-directory: emulator-run-cmd
    - uses: ./install-sdk
      name: install sdk
    - run: sdkmanager platform-tools
    - run: adb devices
    - name: Enable KVM
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
    - uses: ./emulator-run-cmd
      with:
        api: 25
        tag: default
        abi: x86
        cmd: adb shell getprop
        bootTimeout: 500
    - uses: actions/upload-artifact@v1
      with:
        name: logcat
        path: artifacts/logcat.log
  # build:
  # jobs:
    # runs-on : ubuntu-latest
    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@v4.1.1

    #   - name: Setup Java JDK
    #     uses: actions/setup-java@v4.0.0
    #     with:
    #       java-version : '11'
    #       distribution: 'adopt'

    #   - name : Build with Gradle
    #     run : ./gradlew assembleDebug assembleAndroidTest

    #   - name: Enable KVM
    #     run: |
    #       echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
    #       sudo udevadm control --reload-rules
    #       sudo udevadm trigger --name-match=kvm

    #   - uses: actions/checkout@v1
    #   - uses: malinskiy/action-android/emulator-run-cmd@release/0.1.6
    #     with:
    #       cmd: ./gradlew integrationTest
    #       api: 25
    #       tag: default
    #       abi: x86
          
      # - name: Launch emulator
      #   run: |
      #     emulator -avd avd-5544 -no-window &  # Replace with your AVD name
      #     sleep 120  # Adjust sleep time based on emulator startup
      #     ./gradlew connectedCheck
      
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      # - name: Pull emulator image
      #   run: docker pull android-emulator
      # - name: Start emulator (adjust port if needed)
      #   run: docker run -d -p 5555:5555 android-emulator emualdor @my_avd -no-window
      # - name: Run tests (use `adb devices` to verify connection)
      #   run: ./gradlew connectedCheck

      # - name: Run Instrumentation Tests
      #   uses: malinskiy/action-android/emulator-run-cmd@release/0.0.3
      #   with:
      #     cmd: ./gradlew connectedCheck --stacktrace
      #     api: 23
      #     tag: default
      #     abi: x86

      # - name: Reclaim Memory
      #   run: ./gradlew --stop && jps|grep -E 'KotlinCompileDaemon|GradleDaemon'| awk '{print $1}'| xargs kill -9

      # - name: Run tests
      #   run: ./gradlew connectedCheck
     


      - name: UI Test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: default
          arch: x86
          profile: Nexus 6
          script: ./gradlew connectedCheck --stacktrace
      

      - name: Unit Test
        run: ./gradlew testDebugUnitTest
      - name: Android Test Report
        uses: holybear/android-test-report-action@v1.0.0
        if: ${{ always() }}

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.1.0
        with:
          name: EduFileShare.apk
          path: app/build/outputs/apk/debug/app-debug.apk



